/* Generated By:JavaCC: Do not edit this line. MultimediaParserConstants.java */
package MParser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MultimediaParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int media_im = 6;
  /** RegularExpression Id. */
  int media_vid = 7;
  /** RegularExpression Id. */
  int media_aud = 8;
  /** RegularExpression Id. */
  int reproduccion = 9;
  /** RegularExpression Id. */
  int mas = 10;
  /** RegularExpression Id. */
  int menos = 11;
  /** RegularExpression Id. */
  int por = 12;
  /** RegularExpression Id. */
  int div = 13;
  /** RegularExpression Id. */
  int mod = 14;
  /** RegularExpression Id. */
  int pot = 15;
  /** RegularExpression Id. */
  int igual = 16;
  /** RegularExpression Id. */
  int diferente = 17;
  /** RegularExpression Id. */
  int mayor = 18;
  /** RegularExpression Id. */
  int menor = 19;
  /** RegularExpression Id. */
  int mayorigual = 20;
  /** RegularExpression Id. */
  int menorigual = 21;
  /** RegularExpression Id. */
  int and = 22;
  /** RegularExpression Id. */
  int not = 23;
  /** RegularExpression Id. */
  int or = 24;
  /** RegularExpression Id. */
  int punto = 25;
  /** RegularExpression Id. */
  int dpunto = 26;
  /** RegularExpression Id. */
  int arroba = 27;
  /** RegularExpression Id. */
  int oPar = 28;
  /** RegularExpression Id. */
  int cPar = 29;
  /** RegularExpression Id. */
  int hoy = 30;
  /** RegularExpression Id. */
  int ahora = 31;
  /** RegularExpression Id. */
  int cad_min = 32;
  /** RegularExpression Id. */
  int cad_fila = 33;
  /** RegularExpression Id. */
  int cad_max = 34;
  /** RegularExpression Id. */
  int identificador = 35;
  /** RegularExpression Id. */
  int entero = 36;
  /** RegularExpression Id. */
  int decimal = 37;
  /** RegularExpression Id. */
  int str1 = 38;
  /** RegularExpression Id. */
  int str2 = 39;
  /** RegularExpression Id. */
  int verdadero = 40;
  /** RegularExpression Id. */
  int falso = 41;
  /** RegularExpression Id. */
  int fecha = 42;
  /** RegularExpression Id. */
  int hora = 43;
  /** RegularExpression Id. */
  int fechahora = 44;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"\\t\"",
    "\"media_imagen\"",
    "\"media_video\"",
    "\"media_audio\"",
    "\"reproduccion\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"div\"",
    "\"mod\"",
    "\"^\"",
    "\"=\"",
    "\"!=\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"&&\"",
    "\"!\"",
    "\"||\"",
    "\".\"",
    "\"..\"",
    "\"@\"",
    "\"(\"",
    "\")\"",
    "\"hoy()\"",
    "\"ahora()\"",
    "\"cad_min\"",
    "\"cad_fila\"",
    "\"cad_max\"",
    "<identificador>",
    "<entero>",
    "<decimal>",
    "<str1>",
    "<str2>",
    "\"verdadero\"",
    "\"falso\"",
    "<fecha>",
    "<hora>",
    "<fechahora>",
  };

}
